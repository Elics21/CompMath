def aitken(sequence):
    """
    Применяет метод Эйткена для ускорения сходимости последовательности.

    Аргументы:
    sequence -- исходная последовательность

    Возвращает:
    Список ускоренных значений последовательности
    """
    accelerated_sequence = []
    n = len(sequence)

    for i in range(n - 2):
        a_n = sequence[i]
        a_n_plus_1 = sequence[i + 1]
        a_n_plus_2 = sequence[i + 2]

        if a_n_plus_2 - 2 * a_n_plus_1 + a_n != 0:
            b_n = a_n - (a_n_plus_1 - a_n) ** 2 / (a_n_plus_2 - 2 * a_n_plus_1 + a_n)
            accelerated_sequence.append(b_n)
        else:
            accelerated_sequence.append(a_n)

    return accelerated_sequence

"""
    Эта функция принимает на вход последовательность sequence и возвращает список ускоренных значений последовательности,
    полученных с помощью метода Эйткена.
    
    Внутри функции используется цикл for, который проходит по элементам последовательности, начиная с третьего элемента.
    Для каждой тройки элементов a_n, a_n_plus_1 и a_n_plus_2 вычисляется новое значение b_n по формуле метода Эйткена.
    Если знаменатель в формуле равен нулю, то в ускоренную последовательность добавляется исходное значение a_n.
"""

# Исходная медленно сходящаяся последовательность
sequence = [1, 0.5, 0.75, 0.625, 0.6875, 0.65625, 0.671875]

# Применение метода Эйткена
accelerated_sequence = aitken(sequence)

print("Исходная последовательность:", sequence)
print("Ускоренная последовательность:", accelerated_sequence)